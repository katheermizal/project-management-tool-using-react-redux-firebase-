{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","id","Dasboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","class","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credential","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","Date","App","path","component","exact","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3e31d4f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><Link onClick={ props.signOut } to='/'>Log Out</Link></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating gray lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credential) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch({ type: 'SIGNUP_SUCCESS' });\r\n      }).catch((err) => {\r\n        dispatch({ type: 'SIGNUP_ERROR', err});\r\n      });\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks />\r\n    \r\n    return (\r\n        <nav className=\"nav-wrapper black darken\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">PM Tool</Link>\r\n                { links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"notifications\">\r\n                        { notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key=\"{item.id}\">\r\n                                    <span className=\"green-text\">{item.user} </span>\r\n                                    <span>{item.content} </span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"gray-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n          { projects && projects.map(project => {\r\n              return (\r\n                <Link to={ '/project/' + project.id }>\r\n                    <ProjectSummary project={project} key={project.id} />\r\n                </Link>\r\n              )\r\n          })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dasboard extends Component {\r\n    render(){\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt','desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time','desc'] }\r\n    ])\r\n)(Dasboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth }  = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>\r\n                        { project.content }\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"card-action gret lighten-4 grey-text\">\r\n                        <div>Posted by The { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project ....</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTOProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateTOProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signIn(this.state)\r\n    }\r\n    render() {\r\n        const { authError, auth  } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={ this.handleSubmit }  className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign In\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Sign In</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError  } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={ this.handleSubmit }  className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Sign Up\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                    </div>\r\n                </form> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","  \r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={ this.handleSubmit }  className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">\r\n                        Create Project\r\n                    </h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={ this.handleChange } />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea \r\n                            id=\"content\" \r\n                            cols=\"30\"\r\n                            rows=\"10\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={ this.handleChange }>\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //console.log(state);\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      createProject: (project) => dispatch(createProject(project))\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT'}, project);\r\n        }).catch(err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR'}, err );            \r\n        });\r\n    }\r\n};\r\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dasboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route path='/' component={ Dasboard } exact />\n              <Route path='/project/:id' component={ ProjectDetails } />\n              <Route path='/signin' component={ SignIn } />\n              <Route path='/signup' component={ SignUp } />\n              <Route path='/create' component={ CreateProject } />\n            </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error'); \r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }   \r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success') \r\n            return state;   \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success') \r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }  \r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error') \r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }         \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n  }\r\n  \r\n  const projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n      case 'CREATE_PROJECT_SUCCESS':\r\n        console.log('create project success');\r\n        return state;\r\n      case 'CREATE_PROJECT_ERROR':\r\n        console.log('create project error');\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n/** \r\n * Combine multiple reducers to one reducer\r\n */\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  // Your web app's Firebase configuration\r\n  var config = {\r\n    apiKey: \"AIzaSyA7V_EcQDlyUPeI5w-Vlunu_zG2vBKkee8\",\r\n    authDomain: \"pm-tool-49d3e.firebaseapp.com\",\r\n    databaseURL: \"https://pm-tool-49d3e.firebaseio.com\",\r\n    projectId: \"pm-tool-49d3e\",\r\n    storageBucket: \"pm-tool-49d3e.appspot.com\",\r\n    messagingSenderId: \"907289470239\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({ timestampsInSnapshots: true });\r\n  \r\n  export default firebase  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\n/** \n * Help to bind redux with our react app\n */\nimport { Provider } from 'react-redux'\n/**\n * Redux thunk is a middle ware\n */\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n  compose (\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true } ), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  ) \n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={ store }><App /></Provider>,\n    document.getElementById('root')\n  );\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}